import { useCallback, useRef } from 'react';
export function useSyncRef(ref) {
    const localRef = useRef(null);
    const componentRef = useCallback((node) => {
        if (ref) {
            if (typeof ref === 'function') {
                ref(node);
            }
            if ({}.hasOwnProperty.call(ref, 'current')) {
                ref.current = node;
            }
        }
        localRef.current = node;
    }, [ref]);
    return [componentRef, localRef];
}
